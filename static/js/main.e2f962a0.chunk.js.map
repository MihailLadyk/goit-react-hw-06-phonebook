{"version":3,"sources":["components/Contacts/Contacts.module.css","components/ContactsCreator/ContactsCreator.module.css","components/App/App.module.css","components/Filter/Filter.module.css","redux/contacts/contactsActionTypes.js","redux/contacts/contactsAction.js","components/Contacts/Contacts.js","components/ContactsCreator/ContactsCreator.js","redux/filter/filterActions.js","components/Filter/Filter.js","components/App/App.js","redux/contacts/contactsReducer.js","redux/filter/filterReducer.js","redux/store.js","index.js"],"names":["module","exports","add","remove","addAction","createAction","actions","obj","payload","id","v4","name","number","removeAction","mapDispatchToProps","deleteContact","contactActions","connect","props","className","styles","list","contacts","map","contact","list_el","onClick","button","ContactsCreator","state","text","handleSubmit","e","preventDefault","addContact","textChange","setState","target","value","numberChange","onSubmit","this","type","onChange","placeholder","form__field","Component","changeAction","Filter","onFilterChange","filterActions","filter","App","handleFilter","toLowerCase","includes","contactsReducer","createReducer","action","filterRedcuer","store","configureStore","reducer","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e2f962a0.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"Contacts_list__OYKqZ\",\"button\":\"Contacts_button__3JXhN\",\"list_el\":\"Contacts_list_el__29PcY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form__field\":\"ContactsCreator_form__field__3z-Wc\",\"text\":\"ContactsCreator_text__1cYoF\",\"button\":\"ContactsCreator_button__Q9yaK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"text\":\"App_text__3CNwY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form__field\":\"Filter_form__field__2IYMT\"};","export const add = 'contacts/add'\r\nexport const remove = 'contacts/remove'","import * as actions from \"./contactsActionTypes\";\r\nimport { v4 } from \"uuid\";\r\nimport { createAction } from \"@reduxjs/toolkit\";\r\n\r\nexport const addAction = createAction(actions.add, (obj) => ({\r\n  payload: {\r\n    id: v4(),\r\n    name: obj.name,\r\n    number: obj.number,\r\n  },\r\n}));\r\n\r\nexport const removeAction = createAction(actions.remove)\r\n\r\n// export const removeAction = (id) => {\r\n//   return {\r\n//     type: actions.remove,\r\n//     payload: id,\r\n//   };\r\n// };\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styles from \"./Contacts.module.css\";\r\nimport { connect } from \"react-redux\";\r\nimport * as contactActions from \"../../redux/contacts/contactsAction\";\r\n\r\nfunction Contacts(props) {\r\n  return (\r\n    <div>\r\n      <ul className={styles.list}>\r\n        {props.contacts.map((contact) => (\r\n          <li key={contact.id} className={styles.list_el}>\r\n            <p>{contact.name}</p>\r\n            <p>{contact.number}</p>\r\n            <button\r\n              onClick={() => props.deleteContact(contact.id)}\r\n              className={styles.button}\r\n            >\r\n              Delete\r\n            </button>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\nContacts.propTypes = {\r\n  contact: PropTypes.array,\r\n  deleteContact: PropTypes.func,\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  deleteContact: contactActions.removeAction,\r\n};\r\n\r\nexport default connect(null, mapDispatchToProps)(Contacts);\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styles from \"./ContactsCreator.module.css\";\r\nimport { connect } from \"react-redux\";\r\nimport * as contactActions from \"../../redux/contacts/contactsAction\";\r\nclass ContactsCreator extends Component {\r\n  state = {\r\n    text: \"\",\r\n    number: \"\",\r\n  };\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    this.props.addContact({ name: this.state.text, number: this.state.number });\r\n  };\r\n\r\n  textChange = (e) => {\r\n    this.setState({ text: e.target.value });\r\n  };\r\n\r\n  numberChange = (e) => {\r\n    this.setState({ number: e.target.value });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <form onSubmit={this.handleSubmit}>\r\n        <input\r\n          type=\"input\"\r\n          onChange={this.textChange}\r\n          placeholder=\"Name\"\r\n          className={styles.form__field}\r\n        />\r\n\r\n        <input\r\n          type=\"number\"\r\n          placeholder=\"Number\"\r\n          onChange={this.numberChange}\r\n          className={styles.form__field}\r\n        />\r\n\r\n        <button className={styles.button}>Add contact</button>\r\n      </form>\r\n    );\r\n  }\r\n  static propTypes = {\r\n    addContact: PropTypes.func,\r\n  };\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  addContact: contactActions.addAction,\r\n};\r\n\r\nexport default connect(null, mapDispatchToProps)(ContactsCreator);\r\n","import {createAction} from '@reduxjs/toolkit'\r\n\r\nexport const changeAction = createAction('filter/change')\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styles from \"./Filter.module.css\";\r\nimport { connect } from \"react-redux\";\r\nimport * as filterActions from \"../../redux/filter/filterActions\";\r\n\r\nclass Filter extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <input\r\n          placeholder=\"Filter\"\r\n          type=\"input\"\r\n          onChange={(e) => this.props.onFilterChange(e.target.value)}\r\n          className={styles.form__field}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n  static propTypes = {\r\n    Filter: PropTypes.func,\r\n  };\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    filter: state.filter,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  onFilterChange: filterActions.changeAction,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\r\n","\nimport styles from \"./App.module.css\";\nimport Contacts from \"../Contacts/Contacts\";\nimport React, { Component } from \"react\";\nimport ContactsCreator from \"../ContactsCreator/ContactsCreator\";\nimport Filter from \"../Filter/Filter\";\nimport { connect } from \"react-redux\";\n\nclass App extends Component {\n  handleFilter = (e) => {\n    this.setState({\n      filter: e.target.value,\n    });\n  };\n\n  render() {\n    return (\n      <div>\n        <ContactsCreator />\n        <Filter />\n        <h2 className={styles.text}>Contacts</h2>\n        <Contacts contacts={this.props.contacts} />\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    contacts: state.contacts.filter((contact) =>\n      contact.name.toLowerCase().includes(state.filter.toLowerCase())\n    ),\n  };\n};\n\nexport default connect(mapStateToProps)(App);\n","import * as actions from \"./contactsActionTypes\";\r\nimport { createReducer } from \"@reduxjs/toolkit\";\r\n\r\nconst contactsReducer = createReducer([], {\r\n  [actions.add]: (state, action) => [...state, action.payload],\r\n\r\n  [actions.remove]: (state, action) =>\r\n    state.filter((contact) => {\r\n      return contact.id !== action.payload;\r\n    }),\r\n});\r\n\r\nexport default contactsReducer;\r\n","import { createReducer } from \"@reduxjs/toolkit\";\r\n\r\n\r\n\r\nconst filterRedcuer = createReducer(\"\", {\r\n  [\"filter/change\"]: (state, action) => action.payload,\r\n});\r\n\r\nexport default filterRedcuer;\r\n","import { configureStore } from \"@reduxjs/toolkit\";\r\nimport contactsReducer from \"./contacts/contactsReducer\";\r\nimport filterRedcuer from \"./filter/filterReducer\";\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    contacts: contactsReducer,\r\n    filter: filterRedcuer,\r\n  },\r\n});\r\n\r\nexport default store;\r\n","import React from \"react\";\nimport { Provider } from \"react-redux\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App/App\";\nimport store from \"./redux/store\";\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n   <App></App>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}